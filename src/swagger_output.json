{
  "openapi": "3.0.0",
  "info": {
    "version": "v1.0.0",
    "title": "Mjölk API",
    "description": "API for Mjölk",
    "contact": {
      "name": "Dev Support Team",
      "email": "ericphlpp@proton.me"
    },
    "license": {
      "name": "MIT",
      "url": "https://opensource.org/licenses/MIT"
    }
  },
  "servers": [
    {
      "url": "http://localhost:3000/v1",
      "description": "Development server"
    },
    {
      "url": "https://localhost:3000/v1",
      "description": "Staging server"
    },
    {
      "url": "https://api.mjolk/v1",
      "description": "Production server"
    }
  ],
  "tags": [
    {
      "name": "API",
      "description": "API Description"
    },
    {
      "name": "Users",
      "description": "Operations about Backoffice users"
    },
    {
      "name": "Orders",
      "description": "Operations about Orders"
    },
    {
      "name": "Consumables",
      "description": "Operations about Consumables"
    },
    {
      "name": "Recommendations",
      "description": "Operations about Recommendations"
    },
    {
      "name": "Brunchs",
      "description": "Operations about Brunchs"
    },
    {
      "name": "Brunchs Items",
      "description": "Operations about Brunchs Items"
    },
    {
      "name": "Brunchs Reservations",
      "description": "Operations about Brunchs Reservations"
    },
    {
      "name": "Brunchs Reservations Orders",
      "description": "Operations about Brunchs Reservations Orders"
    }
  ],
  "paths": {
    "/": {
      "get": {
        "tags": [
          "API"
        ],
        "summary": "API v1",
        "description": "",
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/explode": {
      "get": {
        "tags": [
          "API"
        ],
        "summary": "API v1",
        "description": "",
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/health": {
      "get": {
        "tags": [
          "API"
        ],
        "summary": "API health",
        "description": "",
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/users/login": {
      "post": {
        "tags": [
          "Users"
        ],
        "summary": "Login with username and password",
        "description": "",
        "responses": {
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "username": {
                    "example": "any"
                  },
                  "password": {
                    "example": "any"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/users/logout": {
      "post": {
        "tags": [
          "Users"
        ],
        "summary": "Logout",
        "description": "",
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/users/register": {
      "post": {
        "tags": [
          "Users"
        ],
        "summary": "Register a new user",
        "description": "",
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "username": {
                    "example": "any"
                  },
                  "password": {
                    "example": "any"
                  },
                  "full_name": {
                    "example": "any"
                  },
                  "role": {
                    "example": "any"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/users/whoami": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Get user information from token",
        "description": "",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/consumables/": {
      "post": {
        "tags": [
          "Consumables"
        ],
        "summary": "Create a new consumable",
        "description": "",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "example": "any"
                  },
                  "type": {
                    "example": "any"
                  },
                  "description": {
                    "example": "any"
                  },
                  "temperature": {
                    "example": "any"
                  },
                  "price": {
                    "example": "any"
                  },
                  "is_vegetarian": {
                    "example": "any"
                  },
                  "is_vegan": {
                    "example": "any"
                  },
                  "availability": {
                    "example": "any"
                  },
                  "allergens": {
                    "example": "any"
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Consumables"
        ],
        "summary": "Get consumables",
        "description": "",
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/consumables/{id}": {
      "get": {
        "tags": [
          "Consumables"
        ],
        "summary": "Get a consumable by Id",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "delete": {
        "tags": [
          "Consumables"
        ],
        "summary": "Delete a consumable by Id",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "put": {
        "tags": [
          "Consumables"
        ],
        "summary": "Update a consumable by Id",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "example": "any"
                  },
                  "type": {
                    "example": "any"
                  },
                  "description": {
                    "example": "any"
                  },
                  "temperature": {
                    "example": "any"
                  },
                  "price": {
                    "example": "any"
                  },
                  "is_vegetarian": {
                    "example": "any"
                  },
                  "is_vegan": {
                    "example": "any"
                  },
                  "availability": {
                    "example": "any"
                  },
                  "allergens": {
                    "example": "any"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/recommendations/": {
      "post": {
        "tags": [
          "Recommendations"
        ],
        "summary": "Create a new recommendation",
        "description": "",
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "example": "any"
                  },
                  "name": {
                    "example": "any"
                  },
                  "content": {
                    "example": "any"
                  },
                  "visit_date": {
                    "example": "any"
                  },
                  "rating": {
                    "example": "any"
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Recommendations"
        ],
        "summary": "Get recommendations",
        "description": "",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/recommendations/{id}": {
      "get": {
        "tags": [
          "Recommendations"
        ],
        "summary": "Get a recommendation by Id",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "delete": {
        "tags": [
          "Recommendations"
        ],
        "summary": "Delete a recommendation by Id",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/brunchs/": {
      "post": {
        "tags": [
          "Brunchs"
        ],
        "summary": "Create a new brunch",
        "description": "",
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "example": "any"
                  },
                  "description": {
                    "example": "any"
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Brunchs"
        ],
        "summary": "Get brunchs",
        "description": "",
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/brunchs/{id}": {
      "get": {
        "tags": [
          "Brunchs"
        ],
        "summary": "Get a brunch by Id",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "put": {
        "tags": [
          "Brunchs"
        ],
        "summary": "Update a brunch by Id",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "example": "any"
                  },
                  "description": {
                    "example": "any"
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Brunchs"
        ],
        "summary": "Delete a brunch by Id",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/brunchs/{id}/items/": {
      "post": {
        "tags": [
          "Brunchs Items"
        ],
        "summary": "Create a new brunch item",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "example": "any"
                  },
                  "course": {
                    "example": "any"
                  },
                  "description": {
                    "example": "any"
                  },
                  "availability": {
                    "example": "any"
                  },
                  "is_vegetarian": {
                    "example": "any"
                  },
                  "is_vegan": {
                    "example": "any"
                  },
                  "allergens": {
                    "example": "any"
                  },
                  "hidden_price": {
                    "example": "any"
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Brunchs Items"
        ],
        "summary": "Get brunch items",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "delete": {
        "tags": [
          "Brunchs Items"
        ],
        "summary": "Delete brunch items",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/brunchs/{id}/items/collection": {
      "post": {
        "tags": [
          "Brunchs Items"
        ],
        "summary": "Create a new brunch item collection",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "map((item": {
                    "example": "any"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/brunchs/{id}/items/{itemId}": {
      "get": {
        "tags": [
          "Brunchs Items"
        ],
        "summary": "Get a brunch item by Id",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "itemId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "put": {
        "tags": [
          "Brunchs Items"
        ],
        "summary": "Update a brunch item by Id",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "itemId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "example": "any"
                  },
                  "course": {
                    "example": "any"
                  },
                  "description": {
                    "example": "any"
                  },
                  "availability": {
                    "example": "any"
                  },
                  "is_vegetarian": {
                    "example": "any"
                  },
                  "is_vegan": {
                    "example": "any"
                  },
                  "allergens": {
                    "example": "any"
                  },
                  "hidden_price": {
                    "example": "any"
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Brunchs Items"
        ],
        "summary": "Delete a brunch item by Id",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "itemId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/brunchs/{id}/reservations/": {
      "post": {
        "tags": [
          "Brunchs Reservations"
        ],
        "summary": "Create a new brunch reservation",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "customer_name": {
                    "example": "any"
                  },
                  "customer_email": {
                    "example": "any"
                  },
                  "customer_phone": {
                    "example": "any"
                  },
                  "company_name": {
                    "example": "any"
                  },
                  "reservation_date": {
                    "example": "any"
                  },
                  "number_of_people": {
                    "example": "any"
                  },
                  "table_number": {
                    "example": "any"
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Brunchs Reservations"
        ],
        "summary": "Get all brunch reservations",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/brunchs/{id}/reservations/{reservationId}": {
      "get": {
        "tags": [
          "Brunchs Reservations"
        ],
        "summary": "Get a brunch reservation by Id",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "reservationId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "put": {
        "tags": [
          "Brunchs Reservations"
        ],
        "summary": "Update a brunch reservation by Id",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "reservationId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "customer_name": {
                    "example": "any"
                  },
                  "customer_email": {
                    "example": "any"
                  },
                  "customer_phone": {
                    "example": "any"
                  },
                  "company_name": {
                    "example": "any"
                  },
                  "reservation_date": {
                    "example": "any"
                  },
                  "number_of_people": {
                    "example": "any"
                  },
                  "table_number": {
                    "example": "any"
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Brunchs Reservations"
        ],
        "summary": "Delete a brunch reservation by Id",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "reservationId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/brunchs/{id}/reservations/{reservationId}/orders/": {
      "post": {
        "tags": [
          "Brunchs Reservations Orders"
        ],
        "summary": "Create a new order for a brunch reservation",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "reservationId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "type": {
                    "example": "any"
                  },
                  "id": {
                    "example": "any"
                  },
                  "comments": {
                    "example": "any"
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Brunchs Reservations Orders"
        ],
        "summary": "Get orders from a brunch reservation",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "reservationId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/brunchs/{id}/reservations/{reservationId}/orders/item/{orderId}": {
      "delete": {
        "tags": [
          "Brunchs Reservations Orders"
        ],
        "summary": "Delete an order from a brunch reservation",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "reservationId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "orderId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/brunchs/{id}/reservations/{reservationId}/orders/consumable/{orderId}": {
      "delete": {
        "tags": [
          "Brunchs Reservations Orders"
        ],
        "summary": "Delete an order from a brunch reservation",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "reservationId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "orderId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/orders/": {
      "post": {
        "tags": [
          "Orders"
        ],
        "summary": "Create a new order",
        "description": "",
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "table_number": {
                    "type": "number"
                  },
                  "orders": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string"
                        },
                        "comments": {
                          "oneOf": [
                            {
                              "type": "string"
                            },
                            {
                              "type": "null"
                            }
                          ]
                        }
                      }
                    }
                  }
                },
                "required": [
                  "table_number",
                  "orders"
                ]
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Orders"
        ],
        "summary": "Get orders",
        "description": "",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/orders/serve/{unitOrderId}": {
      "post": {
        "tags": [
          "Orders"
        ],
        "summary": "Serve order",
        "description": "",
        "parameters": [
          {
            "name": "unitOrderId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/orders/{id}/serveAll": {
      "post": {
        "tags": [
          "Orders"
        ],
        "summary": "Serve all orders",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/orders/{id}/complete": {
      "post": {
        "tags": [
          "Orders"
        ],
        "summary": "Complete order",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/orders/getNotCompleted": {
      "get": {
        "tags": [
          "Orders"
        ],
        "summary": "Get orders not completed",
        "description": "",
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/orders/{id}": {
      "get": {
        "tags": [
          "Orders"
        ],
        "summary": "Get order",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "delete": {
        "tags": [
          "Orders"
        ],
        "summary": "Delete order",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT",
        "description": "Enter your bearer token in the format **Bearer &lt;token&gt;**"
      }
    },
    "schemas": {
      "Consumable": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "string"
          },
          "type": {
            "type": "string",
            "example": "integer"
          },
          "description": {
            "type": "string",
            "example": "string"
          },
          "temperature": {
            "type": "string",
            "example": "string"
          },
          "price": {
            "type": "string",
            "example": "number"
          },
          "is_vegetarian": {
            "type": "string",
            "example": "boolean"
          },
          "is_vegan": {
            "type": "string",
            "example": "boolean"
          },
          "availability": {
            "type": "string",
            "example": "boolean"
          },
          "allergens": {
            "type": "string",
            "example": "string | null"
          }
        }
      }
    }
  },
  "security": [
    {
      "bearerAuth": []
    }
  ]
}